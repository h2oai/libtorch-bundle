# This workflow prepares package for publishing in Maven Central via the Sonatype Nexus OSS Repository - https://oss.sonatype.org

name: Release to Maven Central

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Release version"
        required: true
        type: string
      something:
        description: "Just a test"
        required: true
        type: choice
        default: "three" # default
        options:
        - "one" # X_ONE
        - "two" # X2
        - "three" # X3

jobs:
  full-release:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Initialize GPG
      run: echo -n "${{ secrets.GPG_PRIVATE_KEY }}" | base64 --decode | gpg --import --no-tty --batch --yes || exit 1
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven

    - name: Save files for post-release step
      run: |
        mkdir -p "target/release-package/post-release"
        cp "pom.xml" "target/release-package/post-release/"

    - name: Switch to release version
      run: |
        mvn --batch-mode --show-version versions:set -DnewVersion=${{ inputs.release_version }}
        sed -i 's:<scm>:<scm><tag>v${{ inputs.release_version }}</tag>:' pom.xml

    - name: Build release artifacts
      run: mvn --batch-mode deploy -Prelease -DaltDeploymentRepository=local::default::file://$PWD/target/release-package/maven-repository -DdeployAtEnd

    - name: Save files for pre-release step
      run: |
        mkdir -p "target/release-package/pre-release"
        cp "pom.xml" "target/release-package/pre-release/"
        echo "VERSION: ${{ inputs.release_version }}" > "target/release-package/build.properties"
        echo "TAG: v${{ inputs.release_version }}" >> "target/release-package/build.properties"
        echo "REVISION: $GITHUB_SHA" >> "target/release-package/build.properties"
        echo -e "## Summary\n Version ${{ inputs.release_version }} is ready to be published" >> $GITHUB_STEP_SUMMARY
        env | sort
        echo "::notice file=pom.xml,line=1,endLine=5,title=Prepared::Prepared package for release ${{ inputs.release_version }}"

#    - uses: actions/upload-artifact@v3
#      with:
#        name: "libtorch-bundle-${{ inputs.release_version }}.release-package"
#        path: target/release-package
#        if-no-files-found: error

    - name: Upload to Sonatype OSS Nexus
      run: OSSRH_AUTH=${{ secrets.OSSRH_TOKEN }} ./upload.sh ${{ secrets.OSSRH_STAGING_PROFILE_ID }}
    - name: Git operations - commit, tag, commit
      run: |
        echo "machine     github.com login $GITHUB_ACTOR password ${{ github.token }}" >> "$HOME/.netrc"
        echo "machine api.github.com login $GITHUB_ACTOR password ${{ github.token }}" >> "$HOME/.netrc"
        git config user.email "petr.kozelka@h2o.ai"
        git config user.name "Petr Kozelka"
        cp -a target/release-package/pre-release/* .
        git commit -am 'Released version ${{ inputs.release_version }}'
        git tag v${{ inputs.release_version }}
        cp -a target/release-package/post-release/* .
        git commit -am 'Post-release changes'
        git push && git push --tags
