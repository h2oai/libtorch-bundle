# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  linux-build:

    runs-on: ubuntu-latest
    outputs:
      linux_64: "target/bundles/linux_64.jar"
      osx_64: "target/bundles/osx_64.jar"
      windows_64: "target/bundles/windows_64.jar"
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B verify -Dbundle_all
    - name: Test
      run: |
        ls -la target
        java -cp target/libtorch-bundle.jar:target/bundles/linux_64.jar:target/slf4j-api.jar ai.h2o.LibtorchBundle src/test/data/demo-model.pt1 | tee target/output.txt
        diff -u --color=always src/test/data/demo-model.pt1.output.txt target/output.txt
    - uses: actions/upload-artifact@v3
      with:
        name: "libtorch-bundle-snapshot-linux_64"
        path: target/bundles/linux_64.jar
        if-no-files-found: error
    - uses: actions/upload-artifact@v3
      with:
        name: "libtorch-bundle-snapshot-osx_64"
        path: target/bundles/osx_64.jar
        if-no-files-found: error
    - uses: actions/upload-artifact@v3
      with:
        name: "libtorch-bundle-snapshot-windows_64"
        path: target/bundles/windows_64.jar
        if-no-files-found: warn
    - uses: actions/upload-artifact@v3
      with:
        name: "libtorch-bundle-snapshot"
        path: target/libtorch-bundle.jar
        if-no-files-found: error
    - uses: actions/upload-artifact@v3
      with:
        name: "libtorch-bundle-snapshot"
        path: src/test/data
        if-no-files-found: error

#==== suppressed, windows version does not currently work, see https://github.com/pkozelka/libtorch-bundle/issues/1
#  windows-build:
#    runs-on: windows-latest
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up JDK 11
#      uses: actions/setup-java@v3
#      with:
#        java-version: '11'
#        distribution: 'temurin'
#        cache: maven
#    - name: Build with Maven
#      run: mvn -B package
#    - name: Test
#      run: java -cp target/libtorch-bundle.jar:target/bundles/windows_64.jar:target/slf4j-api.jar ai.h2o.LibtorchBundle src/test/data/demo-model.pt1

  macos-build:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package
    - name: Test
      run: java -cp target/libtorch-bundle.jar:target/bundles/osx_64.jar:target/slf4j-api.jar ai.h2o.LibtorchBundle src/test/data/demo-model.pt1

  macos-test:
    runs-on: macos-latest
    needs: linux-build
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: "libtorch-bundle-snapshot"
          path: lib/
      - uses: actions/download-artifact@v3
        with:
          name: "libtorch-bundle-snapshot-osx_64"
          path: lib/
      - uses: actions/download-artifact@v3
        with:
          name: "data"
          path: lib/
      - name: get slf4j and run against the data
        run: |
          wget https://repo.maven.apache.org/maven2/org/slf4j/slf4j-api/1.7.32/slf4j-api-1.7.32.jar -O lib/slf4j-api.jar
          ls -al lib/
          java -cp lib/libtorch-bundle.jar:lib/osx_64.jar:lib/slf4j-api.jar ai.h2o.LibtorchBundle data/demo-model.pt1 | tee output.txt
          diff -u --color=always data/demo-model.pt1.output.txt output.txt
